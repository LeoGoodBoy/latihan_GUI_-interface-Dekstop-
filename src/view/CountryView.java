/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.CountryController;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.print.DocFlavor;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.RowSorter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import model.Country;
import tools.Koneksi;

/**
 * turunan dari JInternalFrame dari HrFrame
 * @author chochong
 */
public class CountryView extends javax.swing.JInternalFrame {
    
    private SerbaGunaView serbaGuna;    
    private CountryController controller;
    private TableRowSorter<TableModel> rowSorter;
    private String[] cmbItem = {"Country_id","Country_Name","Region_Name"};

    /**
     * Creates new form CountryView
     * dengan melakukan sejumlah fungsi yang dibutuhkan
     */
    public CountryView() {
        initComponents();
        controller = new CountryController(new Koneksi().getKoneksi());
        serbaGuna = new SerbaGunaView();
        bindingCountries(controller.viewCountry());
        controller.loadCmb(cmbRegionId);
        tblCountry.setRowSorter(rowSorter);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblCountry = new javax.swing.JTable();
        txtSearchCountry = new javax.swing.JTextField();
        cmbKategoriCountry = new javax.swing.JComboBox<>();
        btnSearchCountry = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCountryId = new javax.swing.JTextField();
        txtCountryName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cmbRegionId = new javax.swing.JComboBox<>();
        btnSaveCountry = new javax.swing.JButton();
        btnDeleteCountry = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Master Country");
        setToolTipText("ini master country");

        tblCountry.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblCountry.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCountryMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCountry);

        txtSearchCountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchCountryActionPerformed(evt);
            }
        });
        txtSearchCountry.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchCountryKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchCountryKeyReleased(evt);
            }
        });

        cmbKategoriCountry.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Country Id", "Country Name", "Region Name" }));
        cmbKategoriCountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbKategoriCountryActionPerformed(evt);
            }
        });

        btnSearchCountry.setText("FIND");
        btnSearchCountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchCountryActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(247, 253, 253));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Country Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Copperplate Gothic Bold", 1, 12), new java.awt.Color(0, 0, 204))); // NOI18N

        jLabel1.setText("ID COUNTRY");

        txtCountryId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCountryIdActionPerformed(evt);
            }
        });

        txtCountryName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCountryNameActionPerformed(evt);
            }
        });

        jLabel2.setText("NAMA COUNTRY");

        jLabel3.setText("ID REGION");

        cmbRegionId.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmbRegionIdMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cmbRegionIdMouseEntered(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cmbRegionIdMouseReleased(evt);
            }
        });
        cmbRegionId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbRegionIdActionPerformed(evt);
            }
        });

        btnSaveCountry.setText("SAVE");
        btnSaveCountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveCountryActionPerformed(evt);
            }
        });

        btnDeleteCountry.setText("DROP");
        btnDeleteCountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCountryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDeleteCountry)
                .addGap(54, 54, 54)
                .addComponent(btnSaveCountry)
                .addGap(53, 53, 53))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCountryId, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCountryName, javax.swing.GroupLayout.PREFERRED_SIZE, 591, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbRegionId, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(154, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCountryId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(txtCountryName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(cmbRegionId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeleteCountry)
                    .addComponent(btnSaveCountry))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cmbKategoriCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSearchCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSearchCountry)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearchCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbKategoriCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchCountry))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCountryIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCountryIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCountryIdActionPerformed

    private void txtCountryNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCountryNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCountryNameActionPerformed

    /**
     * mengambil substring dari cmbRegionId (bertipe number)
     * dibuat kondisi isUpdate false, ketika kondisi txtCountryId.isEnabled maka fungsi update diajalnankan
     * @param evt 
     */
    private void btnSaveCountryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveCountryActionPerformed
        // TODO add your handling code here:
        String abcd = cmbRegionId.getSelectedItem()+"";
        String subRegionId = abcd.substring(0,1);
        
        boolean isUpdate = false;
        if(!txtCountryId.isEnabled()){
            isUpdate = true;
        }
        if (isUpdate) {   
            String pesan = controller.saveOrUpdateCountry(txtCountryId.getText(),txtCountryName.getText(),  subRegionId, false);
            serbaGuna.tampilPesan(this, pesan, "Pesan Update");
            bindingCountries(controller.viewCountry());}
        else {String pesan = controller.saveOrUpdateCountry(txtCountryId.getText(),txtCountryName.getText(), subRegionId, true);
            serbaGuna.tampilPesan(this, pesan, "Pesan Simpan");
            bindingCountries(controller.viewCountry());
            txtCountryId.setEditable(true);                       
         }   
//        if (txtCountryId.isEditable()) {
//               txtCountryId.setEnabled(false); 
//            String pesan = controller.saveOrUpdateCountry(txtCountryId.getText(),txtCountryName.getText(), txtRegionId.getText(), false);
//            serbaGuna.tampilPesan(this, pesan, "Pesan Update");
//            bindingCountries(controller.viewCountry());}
//         String pesan = controller.saveOrUpdateCountry(txtCountryId.getText(),txtCountryName.getText(), txtRegionId.getText(), true);
//            serbaGuna.tampilPesan(this, pesan, "Pesan Simpan");
//            bindingCountries(controller.viewCountry());
//        txtCountryId.setEditable(true);
    }//GEN-LAST:event_btnSaveCountryActionPerformed

    /**
     * btn delete, dengan joptionpane konfrimasi  yes or no untuk melakukan delete.
     * @param evt 
     */
    private void btnDeleteCountryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCountryActionPerformed
        // TODO add your handling code here:
        int response = JOptionPane.showConfirmDialog(null, "Do you really want to delete?","Pertanyaan",JOptionPane.YES_NO_OPTION);
        if (response == JOptionPane.YES_OPTION) {
        String pesan = controller.hapusCountry(txtCountryId.getText());
        serbaGuna.tampilPesan(this, pesan, "Pesan Delete");
        }else if (response == JOptionPane.NO_OPTION) {
            serbaGuna.tampilPesan(this, "Tidak Jadi", "Pesan Batal Delete");
            bindingCountries(controller.viewCountry());
        }       
        bindingCountries(controller.viewCountry());
    }//GEN-LAST:event_btnDeleteCountryActionPerformed

    /**
     * tblCountryMouseCliked, ketika klik salah satu row ->
     * ditabel maka akan getvalue dari row yang diklik tadi
     * @param evt 
     */
    private void tblCountryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCountryMouseClicked
        // TODO add your handling code here:
        int row = tblCountry.getSelectedRow();
        txtCountryId.setText(tblCountry.getValueAt(row, 1).toString());
        txtCountryName.setText(tblCountry.getValueAt(row, 2).toString());
        cmbRegionId.setSelectedItem(tblCountry.getValueAt(row, 3).toString());
        edit();
    }//GEN-LAST:event_tblCountryMouseClicked

    /**
     * fungsi keyReleased ketika txtsearchCountry di enter
     * @param evt 
     */
    private void txtSearchCountryKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchCountryKeyReleased
        // TODO add your handling code here:
        btnSearchCountry.setEnabled(true);
        if (txtSearchCountry.getText().equals("")) {
                bindingCountries(controller.viewCountry());
                
            }
        if (evt.getKeyCode()==KeyEvent.VK_ENTER) {
            bindingCountries(controller.searchCountry
            (cmbItem[cmbKategoriCountry.getSelectedIndex()], 
                txtSearchCountry.getText()));
        }
        
    }//GEN-LAST:event_txtSearchCountryKeyReleased

    /**
     * btn search untuk cari data yang diinputkan di txtSearchCountry
     * @param evt 
     */
    private void btnSearchCountryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchCountryActionPerformed
        // TODO add your handling code here:
      if (!txtSearchCountry.getText().equalsIgnoreCase("")) 
      {
          bindingCountries(controller.searchCountry
            (cmbItem[cmbKategoriCountry.getSelectedIndex()], 
                txtSearchCountry.getText()));}
    }//GEN-LAST:event_btnSearchCountryActionPerformed

    private void cmbRegionIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbRegionIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbRegionIdActionPerformed

    private void cmbKategoriCountryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbKategoriCountryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbKategoriCountryActionPerformed

    private void cmbRegionIdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbRegionIdMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbRegionIdMouseClicked

    private void cmbRegionIdMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbRegionIdMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbRegionIdMouseReleased

    /**
     * get data dari cmbRegionId ketika mouse diarahkan ke cmbRegionId
     * @param evt 
     */
    private void cmbRegionIdMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbRegionIdMouseEntered
        // TODO add your handling code here:
        String abd = cmbRegionId.getSelectedItem()+"";
        String subAbd = abd.substring(0,1);
    }//GEN-LAST:event_cmbRegionIdMouseEntered

    /**
     * 
     * @param evt 
     */
    private void txtSearchCountryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchCountryActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtSearchCountryActionPerformed

    private void txtSearchCountryKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchCountryKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchCountryKeyPressed

    /**
     * untuk menampilkan sejumlah dari ditabel
     * @param countrys 
     */
    private void bindingCountries(List<Country> countrys){
        String [] header = {"No","Country Id","Country Name","Region Name"};
        String [][] data = new String[countrys.size()][header.length];
        for (int i = 0; i < countrys.size(); i++) {
            data [i][0] = (i+1)+"";
            data [i][1] = countrys.get(i).getCountryId();
            data [i][2] = countrys.get(i).getCountryName();
            data [i][3] = countrys.get(i).getRegion().getRegionId()+" - "+countrys.get(i).getRegion().getRegionName();       
        }
        tblCountry.setModel(new DefaultTableModel(data, header));
        reset();
    }
    
    /**
     * kondisi edit maka ada sejumlah btn yang diset
     */
    private void edit(){
        txtCountryId.setEnabled(false);
        btnSaveCountry.setEnabled(true);
        btnDeleteCountry.setEnabled(true);
    }
    
    /**
     * kondisi kembali kesemula, dengan beberapa atribut yang diset
     */
    private void reset(){
        txtCountryId.setText("");
        txtCountryId.setEnabled(true);
        txtCountryName.setText("");
        //cmbRegionId.setSelectedItem();
        btnDeleteCountry.setEnabled(false);
        btnSearchCountry.setEnabled(false);
        btnSaveCountry.setEnabled(true);
    } 
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeleteCountry;
    private javax.swing.JButton btnSaveCountry;
    private javax.swing.JButton btnSearchCountry;
    private javax.swing.JComboBox<String> cmbKategoriCountry;
    private javax.swing.JComboBox<String> cmbRegionId;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCountry;
    private javax.swing.JTextField txtCountryId;
    private javax.swing.JTextField txtCountryName;
    private javax.swing.JTextField txtSearchCountry;
    // End of variables declaration//GEN-END:variables
    
}
